[workspace]
resolver = "2"
members = [
    "client",
    "server",
    "shared",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0 OR CC0-1.0"

[workspace.dependencies]
bevy_turborand = "0.9.0"
lightyear = { git = "https://github.com/cBournhonesque/lightyear", branch = "cb/jam", features = [
    "leafwing",
    "webtransport",
    "websocket",
    "avian2d"
] }
flo_curves = "0.7.3"
avian2d = { version = "0.1.1", default-features = false, features = [
    "2d",
    "f32",
    "parry-f32",
    "parallel",
    "serialize",
] }
leafwing-input-manager = "0.14"
serde = { version = "1.0", features = ["derive"] }
anyhow = { version = "1.0", features = [] }
tracing = "0.1"
tracing-subscriber = "0.3.17"
bevy = { version = "0.14", features = ["mp3"] }
clap = { version = "4.5", features = ["derive"] }
tokio = "=1.38.1"

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[workspace.lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"

[workspace.lints.rust]
unused_variables = "allow"
unused_mut = "allow"
dead_code = "allow"
unused_imports = "allow"

# Compile with Performance Optimizations:
# https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"